.data
printf_format:
        .string "%d\n"
 
array:
        .long 100, 15, 148, 12, 151, 3, 72
array_end:
 
array_size:
        .long (array_end - array)/4  /* количество элементов массива */
 
.text
.globl main
main:
        movl  $0, %eax          /* в %eax будет храниться результат;
                                   в начале наибольшее значение - 0  */
        movl  $0, %ecx          /* начать просмотр с нулевого элемента 
                                                                     */
 
loop_start:                     /* начало цикла                      */
        cmpl  %eax, array(,%ecx,4)  /* сравнить текущий элемент 
                                   массива с текущим наибольшим 
                                   значением из %eax                 */
        jbe   less              /* если текущий элемент массива меньше 
                                   или равен наибольшему, пропустить 
                                   следующий код                     */
        movl  array(,%ecx,4), %eax  /* а вот если элемент массива 
                                   превосходит наибольший, значит, его 
                                   значение и есть новый максимум    */
less:
        incl  %ecx              /* увеличить на 1 номер текущего 
                                   элемента                          */
        cmpl  array_size, %ecx  /* сравнить номер текущего элемента с 
                                   общим числом элементов            */
        je    loop_end          /* если они равны, выйти из цикла    */
        jmp   loop_start        /* иначе повторить цикл снова        */
loop_end:

/*
 * следующий код выводит число в %eax на экран и завершает программу
 */
        pushl %eax
        pushl $printf_format
        call  printf
        addl  $8, %esp
 
        movl $0, %eax
        ret
