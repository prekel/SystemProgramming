/// \file
/// \brief Коды возврата функций в библиотеке.
/// \details Коды возврата функций в библиотеке, сообщения для вывода
/// сообщений об ошибках и макросы для возвращения значений из функций.

#ifndef RETURNCODESLIB_H
#define RETURNCODESLIB_H

#include <stddef.h>

/// Код возврата успешного завершения функции.
#define SUCCESSFUL 0

/// Сообщение при ошибки аллокаци
#define ALLOCATION_ERROR_MESSAGE "Не удалось выделить память\n"
/// Код возврата при ошибки аллокаци
#define ALLOCATION_ERROR (-9)

/// Если f меньше нуля (то есть функция завершилась с неуспешным кодом
/// возврата), то функция, в которой используется макрос вернёт то,
/// чему равно f.
///
/// \param f Проверяемое целое число или выражение, возвращающее целое число
#define RETURN_IF_NOT_SUCCESSFUL(f) do { \
    int tmp = (f); \
    if (tmp < SUCCESSFUL) \
    { \
        return tmp; \
    } \
} while (0)

/// Если f меньше нуля (то есть функция завершилась с неуспешным кодом
/// возврата), то функция, в которой используется макрос вернёт то,
/// чему равно f.
///
/// \param f Проверяемое целое число или выражение, возвращающее целое число
#define RETURN_IF_NOT_NULL(f) do { \
    int tmp = (f); \
    if (tmp != SUCCESSFUL) \
    { \
        return tmp; \
    } \
} while (0)

/// Если ptr равен NULL, то функция в которой используется макрос, вернёт NULL.
///
/// \param ptr Проверяемый указатель или выражение, возвращающее указатель
#define RETURN_NULL_IF_NULLPTR(ptr) do { \
    if ((ptr) == NULL) \
    { \
        return NULL; \
    } \
} while (0)

#endif //RETURNCODESLIB_H
